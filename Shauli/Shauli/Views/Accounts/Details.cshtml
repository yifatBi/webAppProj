@model Shauli.Models.Account

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDV3pIhglSMXQTHndsV4sq7dSzwaq_jDzw&callback=initMap">
</script>

@* Map styling *@
<style>
    #map {
        height: 400px;
        width: 100%;
    }
</style>

<div>
    <h4>Account</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Usr)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Usr)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Password)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Password)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ConfirmPassword)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ConfirmPassword)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Address)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Address)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.City)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.City)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Country)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Country)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsAdmin)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsAdmin)
        </dd>
    </dl>
    @* Map which displays each user address *@
    <div id="map"></div>
</div>

    @* Script for the Map *@


<script>
    var geocoder;
    var map;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(-34.397, 300.644);
        var mapOptions = {
            zoom: 13,
            center: latlng
        }
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
    }

    function codeAddress() {
        var address= '@Model.Country,@Model.City,@Model.Address';

        geocoder.geocode( { 'address': address}, function(results, status) {
            if (status == 'OK') {
                map.setCenter(results[0].geometry.location);
                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    initialize();
    codeAddress();
</script>








<p>
   @Html.ActionLink("Home", "Index", "PostsToShow")
</p>
